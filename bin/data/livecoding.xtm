(io:osc:start-server 12345 "OF-receive-12345")
(define OF-server (cons "localhost" 12345))

(define-macro (playTSNE x y n v d)
  `(io:osc:send (now) OF-server "/point" ,x ,y ,n ,v ,d))


(define *metre1* (make-metre '(3 3 2 3 2 3 3 3 2 2 1 2 1 1 1) 1/2))
(define *metre2* (make-metre '(2) 1/4))
(define *metre3* (make-metre '(4) 1/4))

(define a 500)
(define b 300)

(define T-SNampler
  (lambda (beat dur)

 ;(if (= (modulo beat 16) (random '(8 10 12)))
 ;   (set! *metre1* (make-metre '(6 2 3 2 3 3 3 2 2 1 2 1 1 1) (random '(1/4 1/2)))))

    (if (= (modulo beat 16) 0)
       (set! *metre1* (make-metre '(3 2 1) 1/2)))

    (set! a (trir 500 200 1/64))
    (set! b (cosr 300 200 1/32))

    (set! *metre2* (make-metre '(3) (random '(1/4 1/4 1/4 1/8 1/6))))
    ;(set! *metre3* (make-metre '(4 1 1 1 1 3 3 2 2 6 8) (random '(1 2 2 1/8))))

  (if (*metre1* beat 3)
   (playTSNE (cosr (- b 100) 20 1/32)
             (cosr (- a 50) 10 1/16)
             10
             0.7
             -1))

 (if (*metre1* beat 1)
  (playTSNE (cosr a 50 1/12)
            (sinr 650 30 1/8)
            7
            1.0
            (random '(500  -1))))

(if (*metre2* beat 1)
 (playTSNE (sinr 900 30 1/12)
           (cosr (+ b 50) 30 1/18)
           (random 7 11)
           (* (random) 0.5)
           (random '(1000 200 300))))


  (if #t (callback (*metro* (+ beat (* .5 dur))) 'T-SNampler (+ beat dur) dur))))

(T-SNampler (*metro* 'get-beat 4) 1/16)
